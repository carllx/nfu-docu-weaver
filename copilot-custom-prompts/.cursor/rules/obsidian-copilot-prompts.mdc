---
globs: *.md
description: Obsidian Copilot自定义提示指令构建规则
---

# Obsidian Copilot 自定义指令构建规则

## 📋 文件结构（必需两部分）

### YAML 配置头

```yaml
---
copilot-command-context-menu-enabled: true/false  # 右键菜单
copilot-command-slash-enabled: true/false         # 斜杠命令  
copilot-command-context-menu-order: 0-120         # 排序优先级
copilot-command-model-key: ""                     # 模型（空字符串或"gpt-4"）
copilot-command-last-used: 0                      # 时间戳（保持0）
---
```

### 指令模板

```text
[动作描述] {} [要求说明]：
    1. [具体规则]
    2. [处理要求] 
    3. [保持原则]
    Return only the [输出格式].
```

## 🔧 变量系统

| 变量类型 | 语法 | 功能 |
|---------|------|------|
| 选中文本 | `{}` 或 `{selected_text}` | 当前选中内容 |
| 笔记链接 | `[[笔记名]]` | 指定笔记内容 |
| 标签聚合 | `{#tag}` 或 `{#tag1,#tag2}` | 标签下所有笔记 |
| 活动笔记 | `{activeNote}` | 当前打开笔记 |
| 目录信息 | `{folder}` | 当前笔记目录 |
| 自定义 | `{variable}` | 用户定义变量 |

## ⚙️ 配置策略

| 功能类型 | 优先级 | 菜单启用 | 斜杠启用 | 典型功能 |
|---------|--------|----------|----------|----------|
| 核心功能 | 0-20 | ✅ | ✅ | 总结、简化、解释 |
| 常用功能 | 21-50 | ✅ | ✅ | 压缩、扩展、翻译 |
| 处理功能 | 51-80 | 按需 | 按需 | 修正、格式化、目录 |
| 专业功能 | 81-120 | ❌ | ❌ | 术语表、特殊转换 |

## 🎯 指令编写规范

### 必需元素

- `{}` 占位符标记选中文本
- 数字编号规则列表 (1, 2, 3...)
- "Return only..." 输出约束

### 指令模板分类

**文本转换**: `[转换动作] {} [目标]：规则列表 → Return only [格式]`
**内容处理**: `[处理动作] {} [要求]：规则列表 → Return only [内容]`  
**分析生成**: `[生成动作] {} [格式]：规则列表 → Return only [结果]`

### 常用规则短语

- 保持格式: "Preserve all formatting, line breaks, special characters"
- 保持语调: "Maintain original tone and style"  
- 长度控制: "Maximum 280 characters" / "Half/Twice its length"
- 输出标准: "Return only the [processed/formatted] [type]"

## 📝 实际示例

### 专业功能指令 - [Learning Path Designer.md](mdc:Learning Path Designer.md)

```yaml
copilot-command-context-menu-order: 85  # 专业功能级别
```

**角色设定**: 课程设计师 → **多层次学习路径规划** → 结构化课程分析

### 处理功能指令 - [Knowledge Structurer.md](mdc:Knowledge Structurer.md)

```yaml
copilot-command-context-menu-order: 65  # 处理功能级别
```

**角色设定**: 知识整合专家 → **碎片信息结构化** → Markdown层级笔记

### 专业功能指令 - [Marpit Slide Creator.md](mdc:Marpit Slide Creator.md)

```yaml
copilot-command-context-menu-order: 90  # 专业功能级别
```

**角色设定**: 演示文稿设计专家 → **Marpit幻灯片制作** → 结构化演示内容

## ⚠️ 关键约束

**文件**: 英文命名，直接放置命令目录，避免特殊字符 `/\:*?"<>|^[]`，唯一命名防覆盖  
**变量**: 必须用 `{}` 语法，精确匹配 vault 内容，独立行放置  
**配置**: 所有 frontmatter 字段必须包含，统一 "Return only..." 输出格式  
**性能**: 大量标签聚合注意 token 限制，支持 markdown 格式

## 🔍 调试检查

**流程**: 小范围测试 → 变量验证 → 日志确认  
**排查**: 内容未提取(检查拼写)，命令不显示(检查配置)，内容超长(减少聚合)

## ✅ 创建检查清单

- [ ] YAML 配置完整正确
- [ ] 变量语法准确 (`{}`、`[[]]`、`{#tag}`)  
- [ ] 变量名与 vault 匹配
- [ ] "Return only..." 输出格式
- [ ] 英文文件命名规范
- [ ] 小范围测试通过

**核心理念**: 用户专注 prompt 设计，插件自动处理内容提取拼接，实现信息聚合与智能处理自动化。
